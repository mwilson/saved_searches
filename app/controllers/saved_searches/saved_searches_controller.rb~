class SavedSearchesController < ApplicationController
  layout 'single_column'

  # GET /saved_searches
  # GET /saved_searches.xml
  def index
    @saved_searches = SavedSearch.all

    respond_to do |format|
      format.html # index.html.erb
      format.xml  { render :xml => @saved_searches }
    end
  end

  # GET /saved_searches/1
  # GET /saved_searches/1.xml
  def show
    @saved_search = SavedSearch.find(params[:id])

    respond_to do |format|
      format.html # show.html.erb
      format.xml  { render :xml => @saved_search }
    end
  end

  # GET /saved_searches/new
  # GET /saved_searches/new.xml
  def new
    @saved_search = SavedSearch.new

    respond_to do |format|
      format.html # new.html.erb
      format.xml  { render :xml => @saved_search }
    end
  end

  # GET /saved_searches/1/edit
  def edit
    @saved_search = SavedSearch.find(params[:id])
  end

  # POST /saved_searches
  # POST /saved_searches.xml
  def create
    @saved_search = SavedSearch.new(params[:saved_search])

    respond_to do |format|
      if @saved_search.save
        format.html { redirect_to(@saved_search, :notice => 'Saved search was successfully created.') }
        format.xml  { render :xml => @saved_search, :status => :created, :location => @saved_search }
      else
        format.html { render :action => "new" }
        format.xml  { render :xml => @saved_search.errors, :status => :unprocessable_entity }
      end
    end
  end

  # PUT /saved_searches/1
  # PUT /saved_searches/1.xml
  def update
    @saved_search = SavedSearch.find(params[:id])

    respond_to do |format|
      if @saved_search.update_attributes(params[:saved_search])
        format.html { redirect_to(@saved_search, :notice => 'Saved search was successfully updated.') }
        format.xml  { head :ok }
      else
        format.html { render :action => "edit" }
        format.xml  { render :xml => @saved_search.errors, :status => :unprocessable_entity }
      end
    end
  end

  # DELETE /saved_searches/1
  # DELETE /saved_searches/1.xml
  def destroy
    @saved_search = SavedSearch.find(params[:id])
    @saved_search.destroy

    respond_to do |format|
      format.html { redirect_to(saved_searches_url) }
      format.xml  { head :ok }
    end
  end

  def query_model
    @saved_search = SavedSearch.find(params[:id])
    @model_name = eval(@saved_search.model_name).new
  end

  def query_model_by_form
    @original_ss = SavedSearch.find(params[params[:model_name]][:saved_search_id])
    persist_key = "control_charts_user"
    persist_value = current_user.id
    SavedSearch.connection.delete("delete from saved_searches where persist_key = '#{persist_key}' and persist_value = #{persist_value}")

    @saved_search = SavedSearch.new
    @saved_search.persist = true
    @saved_search.model_name = params[:model_name]
    @saved_search.query_parameters = Hash.new
    @saved_search.persist_key = "control_charts_user"
    @saved_search.persist_value = current_user
    for field in params[@saved_search.model_name].keys
      if params[@saved_search.model_name][field.to_sym] != ""
        @saved_search.query_parameters.merge!({field.to_sym => params[@saved_search.model_name][field.to_sym]})
      end
    end
    @saved_search.display_fields = @original_ss.display_fields
    @saved_search.save
    redirect_to :controller => params[@saved_search.model_name][:redirect_controller],
                :action => params[@saved_search.model_name][:redirect_action]
  end

  def render_table
    @saved_search = SavedSearch.find(params[:id])
  end

end
